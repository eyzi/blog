name: Main workflow

on:
  push:
    branches: [main]

jobs:
  checkout:
    name: Checkout
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
        name: Checkout
        with:
          fetch-depth: 0

  version:
    name: Version
    runs-on: self-hosted
    needs: [checkout]
    if: "!contains(github.event.head_commit.message, 'chore(release)')"
    steps:
      - name: Import GPG Key
        uses: crazy-max/ghaction-import-gpg@v4
        with:
          gpg_private_key: ${{secrets.GPG_KEY}}
          passphrase: ${{secrets.GPG_PASS}}
          git_committer_name: ${{secrets.GIT_NAME}}
          git_committer_email: ${{secrets.GIT_EMAIL}}
          git_user_signingkey: true
          git_commit_gpgsign: true
          git_tag_gpgsign: true
      - name: Publish
        run: |
          git config --local gpg.program $(which gpg)
          git remote set-url origin "https://${{secrets.GIT_NAME}}:${{secrets.GIT_TOKEN}}@github.com/$GITHUB_REPOSITORY"
          yarn release
          git push --follow-tags origin ${{github.ref_name}}

  build:
    name: Build
    runs-on: self-hosted
    needs: [checkout]
    if: "contains(github.event.head_commit.message, 'chore(release)')"
    steps:
      - name: Get package info
        id: package
        uses: codex-team/action-nodejs-package-info@v1
      - name: Set image tag
        id: tags
        run: |
          echo "::set-output name=bare::${{secrets.DOCKER_REGISTRY}}/${{secrets.DOCKER_REPOSITORY}}"
          echo "::set-output name=semver::${{secrets.DOCKER_REGISTRY}}/${{secrets.DOCKER_REPOSITORY}}:${{steps.package.outputs.version}}"
          echo "::set-output name=latest::${{secrets.DOCKER_REGISTRY}}/${{secrets.DOCKER_REPOSITORY}}:latest"
      - uses: docker/login-action@v1
        name: Login to docker registry
        with:
          registry: ${{secrets.DOCKER_REGISTRY}}
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_PASSWORD}}
      - name: Build docker image
        run: docker build . -t ${{steps.tags.outputs.latest}} -t ${{steps.tags.outputs.semver}}
      - name: Push docker image
        run: docker push ${{steps.tags.outputs.bare}} --all-tags
